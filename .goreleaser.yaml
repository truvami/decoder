# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: decoder

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - binary: decoder
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
      - windows
      - linux
      - freebsd
      - netbsd
      - illumos
    goarch:
      - amd64
      - arm64
      - arm
      - "386"
      - ppc64le
      - s390x
      - mips64
      - mips64le
      - riscv64
      - loong64
    goarm:
      - "6"
      - "7"
    gomips:
      - hardfloat
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: freebsd
        goarch: arm64

checksum:
  name_template: '{{ .ProjectName }}-{{ .Version }}-checksums.txt'

archives:
  - format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    name_template: '{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    files:
      - LICENSE
      - README.md

# brews:
#   - repository:
#       owner: truvami
#       name: homebrew-tap
#     directory: Formula
#     homepage: https://truvami.com
#     description: Example implementation of truvami decoder.
#     install: |
#       bin.install "decoder"
#       output = Utils.popen_read("#{bin}/decoder completion bash")
#       (bash_completion/"decoder").write output
#       output = Utils.popen_read("#{bin}/decoder completion zsh")
#       (zsh_completion/"_decoder").write output
#       output = Utils.popen_read("#{bin}/decoder completion fish")
#       (fish_completion/"decoder.fish").write output
#       prefix.install_metafiles
#     test: |
#       system "#{bin}/decoder --version"

chocolateys:
  - name: truvami-decoder
    owners: truvami
    title: truvami decoder
    authors: truvami
    project_url: https://docs.truvami.com
    url_template: "https://github.com/truvami/decoder/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    icon_url: "https://avatars.githubusercontent.com/u/144101217?s=200&v=4"
    copyright: 2024 truvami
    license_url: https://github.com/truvami/decoder/blob/main/LICENSE
    require_license_acceptance: false
    project_source_url: https://github.com/truvami/decoder
    package_source_url: https://github.com/truvami/decoder
    docs_url: https://docs.truvami.com
    bug_tracker_url: https://github.com/truvami/decoder/issues
    tags: "lora truvami decoder"
    summary: truvami decoder reference implementation.
    description: |
      {{ .ProjectName }} installer package.
      truvami decoder reference implementation.
    release_notes: "https://github.com/truvami/decoder/releases/tag/v{{ .Version }}"
    api_key: "{{ .Env.CHOCO_API_KEY }}"
    source_repo: "https://push.chocolatey.org/"
    skip_publish: false
    goamd64: v1

dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: build/buildx.Dockerfile
    image_templates:
      - "ghcr.io/truvami/decoder:latest"
      - "ghcr.io/truvami/decoder:{{ .Tag }}"
      - "ghcr.io/truvami/decoder:{{ .Major }}"
      - "ghcr.io/truvami/decoder:{{ .Major }}.{{ .Minor }}"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--platform=linux/amd64'
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: build/buildx.Dockerfile
    image_templates:
      - "ghcr.io/truvami/decoder:latest-arm64"
      - "ghcr.io/truvami/decoder:{{ .Tag }}-arm64"
      - "ghcr.io/truvami/decoder:{{ .Major }}-arm64"
      - "ghcr.io/truvami/decoder:{{ .Major }}.{{ .Minor }}-arm64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--platform=linux/arm64'
  - use: buildx
    goos: linux
    goarch: amd64
    dockerfile: build/buildx-alpine.Dockerfile
    image_templates:
      - "ghcr.io/truvami/decoder:alpine"
      - "ghcr.io/truvami/decoder:latest-alpine"
      - "ghcr.io/truvami/decoder:{{ .Tag }}-alpine"
      - "ghcr.io/truvami/decoder:{{ .Major }}-alpine"
      - "ghcr.io/truvami/decoder:{{ .Major }}.{{ .Minor }}-alpine"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--platform=linux/amd64'
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: build/buildx-alpine.Dockerfile
    image_templates:
      - "ghcr.io/truvami/decoder:alpine-arm64"
      - "ghcr.io/truvami/decoder:latest-alpine-arm64"
      - "ghcr.io/truvami/decoder:{{ .Tag }}-alpine-arm64"
      - "ghcr.io/truvami/decoder:{{ .Major }}-alpine-arm64"
      - "ghcr.io/truvami/decoder:{{ .Major }}.{{ .Minor }}-alpine-arm64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - '--platform=linux/arm64'

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
