name: CI ðŸš§

on:
  push:
    paths:
      - "**.go"
      - "**.md"
      - "**.mod"

jobs:
  lint-and-format:
    name: Lint & Format ðŸ§¹
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          # Enable caching for Go modules
          cache: true
          # Optional: Specify a cache-dependency path if your go.mod/go.sum are not at the root
          # cache-dependency-path: go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58

      - name: Run JSON tags camelCase check
        run: make check-json-tags

      - name: Check Prometheus metrics
        run: make check-metrics

  test-coverage:
    name: Test & Coverage ðŸ§ª
    runs-on: ubuntu-latest
    env:
      ENV: test
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          # Enable caching for Go modules
          cache: true
          # Optional: Specify a cache-dependency path if your go.mod/go.sum are not at the root
          # cache-dependency-path: go.sum

      - name: Generate test coverage
        # No explicit 'go mod download' needed if tests directly use modules,
        # as the 'go test' command will use the cached modules.
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml
          profile: cover.out
          local-prefix: github.com/truvami/decoder
          threshold-file: 75
          threshold-package: 80
          threshold-total: 80
